--- !ditz.rubyforge.org,2008-03-06/issue 
title: An actual installer is needed
desc: Requiring people manually follow the instructions on the website to install Bedrock Linux is an unnecessary barrier to entry which should be removed.  An actual installer is needed.
type: :feature
component: installer
release: 
reporter: paradigm <paradigm@bedrocklinux.org>
status: :unstarted
disposition: 
creation_time: 2012-10-24 17:45:45.254195 Z
references: []

id: 91002b683a3a15ac875f792d7a866c5a3720cdab
log_events: 
- - 2012-10-24 18:07:22.141329 Z
  - paradigm <paradigm@bedrocklinux.org>
  - created
  - |-
    Thoughts on the installer:
    
    - Creating a Live Linux distro for this is against the Bedrock Linux philosophy.  Other distros already provide these - lets use those.  Thus, the installer should be something that can run any of a number of other Live distros such as the Ubuntu installer, Knoppix, Slax, etc, or an existing on-disk distro.  The code for the installer should be very portable - Bourne shell over bash, etc.
    
    - The installer should be broken down into the steps necessary to install Bedrock.  Early on in its development, most or even all of these steps could simply be instructions from the website printed out to the screen for the user to follow.  These steps can be replaced with automation one at a time.
    
    - Pre-built binaries should not be provided, for fear of end-users then relying on us to keep them up-to-date or limiting flexibility.  We should put some effort in ensuring the end-users are self-sufficient.  Either the binaries will be compiled during install process or yanked from a client.  Until we have an updater, the user should be warned that he or she is responsible for keeping the components up-to-date.  Eventually we should work towards an updater which could automate this.
    
    - Where possible, the user should be provided the option to either use a component from a client, have the installer compile it, or use another pre-compiled version (ie, the user has some solution we don't know about).
- - 2013-02-18 14:34:33.810394 Z
  - paradigm <paradigm@bedrocklinux.org>
  - issue claimed
  - |-
    I've got the basic framework for an installer set up - it should be ready to go
    for Flopsie.  The idea at the moment:
    
    - It will all be a portable /bin/sh script which should run on most major Linux
    distributions.  Dependent on as little as possible outside of normal UNIX
    utilities and gcc.
    
    - There will be a configuration file the user will have to fill out prior to
    running which contain options such as whether to compile busybox or use an
    existing one.  Probably just a simple bourne shell script we can source.  Maybe
    we'll eventually make a menuconfig for it, linux-kernel/busybox style.
    
    - For things it will compile, not yet sure about automating getting the source
    code or not.  Don't really care to maintain up-to-date information on these
    things, but automating it would make the process seem a lot easier for end-user.
    
    - It won't compile the kernel.  That will, for the foreseeable future, be a
    manual step.  It expects a pre-existing one, such as from a client.  Users are
    free to compile their own and point to that in the config.
    
    - No automation for partitioning or bootloader at first.  Way to easy to mess
    up and ruin an end-user's day.  Maybe later.
    
    - Likely no automation for adding initial client(s) in first release of
    installer, but changing that in a later release should be a high priority.
    
    - If it requires compiling something, will use a musl-based stack.  This way we
    can standardize on something rather than fighting with various distros'
    libraries which may or may not support things like statically compiling things.
    
    - Busybox - or anything else that requires its own configuration (other than
    the kernel) - should have a pre-existing recommended configuration or two the
    user can pick from (in addition to user's own fully-customized choice).
claimer: paradigm <paradigm@bedrocklinux.org>
